using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class HeatmapAvatar : MonoBehaviour {

	// Attached to the fake avatars generated by heatmap
//	public List<GameObject> droppedObjects = new List<GameObject>();
	public GameObject blackHolePrefab;
	public List<Vector3> positions = new List<Vector3>();
	public int secondsElapsedInt = 0; // player's experience of time, if this is at 6 seconds, then it shows avatar's approx position for this player when player was 6 seconds into game.
	public TrailRenderer trail;
	public bool frozen = false;
	float time = 0;
	float dropInterval = 1;
	Vector3 lastDropPosition = Vector3.zero;
	float minDistToDropNew = 5f;
	public Color heatmapColor = Color.black;
	// Update is called once per frame
//	float accumulatedScale = 1;
	public CCText name;
//	List<Vector3> accumulatedPositions = new List<Vector3>();
	public float moveSpeed=1f;
	RecordPosition rp;
	void Start(){
		rp = this.gameObject.AddComponent<RecordPosition>();
	}
	public void SetSpeed(float s){
		moveSpeed = s;
	}

	bool Moving(){
		return Vector3.SqrMagnitude(rp.nowPosition-rp.lastPosition) > .001f;
	}

	public void SetHeatmapAvatarProperties(Color body,string n){
//		Utils.SetTrailRendererColorKeys(trail,body);
		heatmapColor = body;
		name.Color = body;
		name.Text = n;

	}
	bool stopped = false;
	float secondsElapsedF = 0f;
	public void AdvanceTime(float speedFactor){
		if (frozen) return;
		secondsElapsedF += Time.deltaTime * speedFactor;
		if (secondsElapsedF > 1){ 
			secondsElapsedInt ++; // only advance localtime for non frozen avatars
			secondsElapsedF = 0;
		}
		// Does this heatmap exist during the current time?
		//				float endTime = hd.startTime + (heatmapTimeInterval * hd.positions.Count);
		//				if (hd.startTime < currentTime && endTime > currentTime){
		// exists!



		// but WHICH position do we assign to this existing avatar?
		// get delta elapsed time for this avatar

		//					Debug.Log("currenttime;"+currentTime+", hd start;"+hd.startTime+",dt:"+dt);
		int index = Mathf.RoundToInt(secondsElapsedInt / HeatmapManager.heatmapTimeInterval) + 2; // add one beacuse they were already instanced at position 0 and are waiting to move to position 1. Add another because pos 0 is always 0,0,0 beacuse heatmap starts before playerposition set??
		//				Debug.Log("Curtiem:"+currentTime+", index;"+index);
		if (positions.Count > index) {
			// current move distance is positions[index] - positions[index-1]
			float distToTravel = 1;
			Vector3 dirToTarget = Vector3.forward;
			if (index > 0){
				dirToTarget = positions[index]-positions[index-1];

				distToTravel = Mathf.Max(1,Vector3.Magnitude(dirToTarget));
			}
			float moveSpeed = distToTravel / (float)HeatmapManager.heatmapTimeInterval * speedFactor;
			transform.position = Vector3.MoveTowards(transform.position,positions[index],moveSpeed*Time.deltaTime);
			transform.forward = dirToTarget;
//			if (debug) WebGLComm.inst.Debug("moving towards;"+hd.positions[index]);
		} else {
			if (!stopped){
				stopped = true;
//				Debug.Log("black hole!");
				// We reached the end. Make a black hold
				transform.position = positions[positions.Count-1];
				GameObject blackHole = (GameObject)Instantiate(blackHolePrefab,transform.position + Random.value * Vector3.up ,Quaternion.identity);
				blackHole.transform.parent = transform;
				foreach(HeatmapStager hs in FindObjectsOfType<HeatmapStager>()){
					hs.BlackHoleDetected();
				}
			}
		}
//		if (debug) WebGLComm.inst.Debug("heatmap valid! index:"+index);

	}

	void OnDestroy(){
//		foreach(GameObject o in droppedObjects){
//			Destroy(o);
//		}
	}
}
